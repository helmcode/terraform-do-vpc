# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore Mac .DS_Store files
.DS_Store

# Ignore editor files
.vscode/
.idea/
*.swp
*.swo
*~

# Ignore env files
.env
.env.*

# Ignore terraform lock files in examples (modules should not have lock files)
examples/**/.terraform.lock.hcl

# Ignore any local testing directories
test/
testing/
local-test/

# Ignore any generated documentation
docs/_build/
docs/.doctrees/

# Ignore any local scripts
local-scripts/
scripts/local/

# Ignore temporary files
*.tmp
*.temp
*.bak

# Ignore log files
*.log

# Python cache
__pycache__/
*.pyc

# Node modules (if using any JS tooling)
node_modules/

# Ignore any local configuration
local.auto.tfvars
*.local.tfvars

# Ignore any credentials or secrets
*credentials*
*secret*
*token*
!terraform.tfvars.example

# Ignore plan files
*.tfplan
*.plan

# Ignore Terraform generated provider files
.terraform.lock.hcl